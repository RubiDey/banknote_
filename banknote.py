# -*- coding: utf-8 -*-
"""BankNote.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hjQz9-QAX99VSCZPQXxKXjGgebJVeWwK
"""

import pandas as pd
import numpy as np 
import os

BankData=pd.read_csv("BankNote_Authentication.csv")

BankData.head()

BankData.tail()

BankData.info()

BankData.describe()

BankData.isnull().sum()

BankData.dtypes

from sklearn.model_selection import train_test_split

X=BankData.drop(["class"],axis=1)
y=BankData["class"]

X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=123,stratify=y)

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)

from sklearn.preprocessing import StandardScaler

scaler = StandardScaler()

scaler.fit(X_train)

# scale on train
X_train = scaler.transform(X_train)

# scale on test
X_test = scaler.transform(X_test)

X_train=pd.DataFrame(X_train)
X_train

X_test=pd.DataFrame(X_test)
X_test

from sklearn.linear_model import LogisticRegression

logistic_model = LogisticRegression(penalty='none')

logistic_model.fit(X_train,y_train)

train_preds = logistic_model.predict(X_train)
train_preds_prob=logistic_model.predict_proba(X_train)[:,1]
test_preds = logistic_model.predict(X_test)
test_preds_prob=logistic_model.predict_proba(X_test)[:,1]

train_preds

logistic_model.coef_

import pickle

pickle.dump(logistic_model, open('BankNote.pickle','wb'))

model=pickle.load(open('BankNote.pickle','rb'))

print(model.predict([[1,1,0,0]]))

